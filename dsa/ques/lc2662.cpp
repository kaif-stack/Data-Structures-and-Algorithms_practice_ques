#include <bits/stdc++.h>
using namespace std; 

    void rec(vector<int>& start, vector<int>& target, vector<vector<int>>& specialRoads, long long int &mincost, long long int pathcost)
    {
        if(pathcost>mincost)return;
        if(start[0]==target[0] && start[1] == target[1]){if(mincost>pathcost)mincost = pathcost;return;}

        if(pathcost + (abs(start[0] - target[0]) + abs(start[1] - target[1])) < mincost)
        {
            mincost = pathcost + (abs(start[0] - target[0]) + abs(start[1] - target[1]));
        }

        long long int temp = pathcost;
        for(int i = 0; i<specialRoads.size(); i++)
        {
            if(temp + (abs(start[0] - specialRoads[i][0]) + abs(start[1] - specialRoads[i][1])) + specialRoads[i][4] < mincost)
            {
                vector<int> tempstart = {specialRoads[i][2], specialRoads[i][3]};
                long long int t = temp + (abs(start[0] - specialRoads[i][0]) + abs(start[1] - specialRoads[i][1])) + specialRoads[i][4];
                rec(tempstart, target, specialRoads, mincost, t);
            }
        }
    }
    
    int minimumCost(vector<int>& start, vector<int>& target, vector<vector<int>>& specialRoads) {
        long long int mincost = INT_MAX;
        rec(start, target, specialRoads, mincost, 0);
        return mincost;
    }

     int findKOr(vector<int>& nums, int k) {
        int length = nums.size();
        vector <int> v(33,0);
        for(int i=0; i<length;i++)
        {
            int x=1;
            while(nums[i]>0)
            {
                if(nums[i]%2)v[x]++;
                x++;
                nums[i]>>=1;
            }
        }
        long long int ans=0;
        for(int i=0; i<v.size(); i++)
        {
            if(v[i]>=k)
            {
                ans+=(pow(2,i-1));
            }
        }
        return ans;
    }

int main()
{
    vector<int> start = {1,1};
    vector <int> target  = {7,12,9,8,9,15};
    // vector <vector<int>> specialRoads = {{100,100,200,200,1},{200,200,300,300,1},{300,300,400,400,1},{400,400,500,500,1},{500,500,600,600,1},{600,600,700,700,1},{700,700,800,800,1},{800,800,900,900,1},{900,900,1000,1000,1},{1000,1000,1100,1100,1},{1100,1100,1200,1200,1},{1200,1200,1300,1300,1},{1300,1300,1400,1400,1},{1400,1400,1500,1500,1},{1500,1500,1600,1600,1},{1600,1600,1700,1700,1},{1700,1700,1800,1800,1},{1800,1800,1900,1900,1},{1900,1900,2000,2000,1},{2000,2000,2100,2100,1},{2100,2100,2200,2200,1},{2200,2200,2300,2300,1},{2300,2300,2400,2400,1},{2400,2400,2500,2500,1},{2500,2500,2600,2600,1},{2600,2600,2700,2700,1},{2700,2700,2800,2800,1},{2800,2800,2900,2900,1},{2900,2900,3000,3000,1},{3000,3000,3100,3100,1},{3100,3100,3200,3200,1},{3200,3200,3300,3300,1},{3300,3300,3400,3400,1},{3400,3400,3500,3500,1},{3500,3500,3600,3600,1},{3600,3600,3700,3700,1},{3700,3700,3800,3800,1},{3800,3800,3900,3900,1},{3900,3900,4000,4000,1},{4000,4000,4100,4100,1},{4100,4100,4200,4200,1},{4200,4200,4300,4300,1},{4300,4300,4400,4400,1},{4400,4400,4500,4500,1},{4500,4500,4600,4600,1},{4600,4600,4700,4700,1},{4700,4700,4800,4800,1},{4800,4800,4900,4900,1},{4900,4900,5000,5000,1},{5000,5000,5100,5100,1},{5100,5100,5200,5200,1},{5200,5200,5300,5300,1},{5300,5300,5400,5400,1},{5400,5400,5500,5500,1},{5500,5500,5600,5600,1},{5600,5600,5700,5700,1},{5700,5700,5800,5800,1},{5800,5800,5900,5900,1},{5900,5900,6000,6000,1},{6000,6000,6100,6100,1},{6100,6100,6200,6200,1},{6200,6200,6300,6300,1},{6300,6300,6400,6400,1},{6400,6400,6500,6500,1},{6500,6500,6600,6600,1},{6600,6600,6700,6700,1},{6700,6700,6800,6800,1},{6800,6800,6900,6900,1},{6900,6900,7000,7000,1},{7000,7000,7100,7100,1},{7100,7100,7200,7200,1},{7200,7200,7300,7300,1},{7300,7300,7400,7400,1},{7400,7400,7500,7500,1},{7500,7500,7600,7600,1},{7600,7600,7700,7700,1},{7700,7700,7800,7800,1},{7800,7800,7900,7900,1},{7900,7900,8000,8000,1},{8000,8000,8100,8100,1},{8100,8100,8200,8200,1},{8200,8200,8300,8300,1},{8300,8300,8400,8400,1},{8400,8400,8500,8500,1},{8500,8500,8600,8600,1},{8600,8600,8700,8700,1},{8700,8700,8800,8800,1},{8800,8800,8900,8900,1},{8900,8900,9000,9000,1},{9000,9000,9100,9100,1},{9100,9100,9200,9200,1},{9200,9200,9300,9300,1},{9300,9300,9400,9400,1},{9400,9400,9500,9500,1},{9500,9500,9600,9600,1},{9600,9600,9700,9700,1},{9700,9700,9800,9800,1},{9800,9800,9900,9900,1},{9900,9900,10000,10000,1},{10000,10000,10100,10100,1},{100,100,200,200,1},{200,200,300,300,1},{300,300,400,400,1},{400,400,500,500,1},{500,500,600,600,1},{600,600,700,700,1},{700,700,800,800,1},{800,800,900,900,1},{900,900,1000,1000,1},{1000,1000,1100,1100,1},{1100,1100,1200,1200,1},{1200,1200,1300,1300,1},{1300,1300,1400,1400,1},{1400,1400,1500,1500,1},{1500,1500,1600,1600,1},{1600,1600,1700,1700,1},{1700,1700,1800,1800,1},{1800,1800,1900,1900,1},{1900,1900,2000,2000,1},{2000,2000,2100,2100,1},{2100,2100,2200,2200,1},{2200,2200,2300,2300,1},{2300,2300,2400,2400,1},{2400,2400,2500,2500,1},{2500,2500,2600,2600,1},{2600,2600,2700,2700,1},{2700,2700,2800,2800,1},{2800,2800,2900,2900,1},{2900,2900,3000,3000,1},{3000,3000,3100,3100,1},{3100,3100,3200,3200,1},{3200,3200,3300,3300,1},{3300,3300,3400,3400,1},{3400,3400,3500,3500,1},{3500,3500,3600,3600,1},{3600,3600,3700,3700,1},{3700,3700,3800,3800,1},{3800,3800,3900,3900,1},{3900,3900,4000,4000,1},{4000,4000,4100,4100,1},{4100,4100,4200,4200,1},{4200,4200,4300,4300,1},{4300,4300,4400,4400,1},{4400,4400,4500,4500,1},{4500,4500,4600,4600,1},{4600,4600,4700,4700,1},{4700,4700,4800,4800,1},{4800,4800,4900,4900,1},{4900,4900,5000,5000,1},{5000,5000,5100,5100,1},{5100,5100,5200,5200,1},{5200,5200,5300,5300,1},{5300,5300,5400,5400,1},{5400,5400,5500,5500,1},{5500,5500,5600,5600,1},{5600,5600,5700,5700,1},{5700,5700,5800,5800,1},{5800,5800,5900,5900,1},{5900,5900,6000,6000,1},{6000,6000,6100,6100,1},{6100,6100,6200,6200,1},{6200,6200,6300,6300,1},{6300,6300,6400,6400,1},{6400,6400,6500,6500,1},{6500,6500,6600,6600,1},{6600,6600,6700,6700,1},{6700,6700,6800,6800,1},{6800,6800,6900,6900,1},{6900,6900,7000,7000,1},{7000,7000,7100,7100,1},{7100,7100,7200,7200,1},{7200,7200,7300,7300,1},{7300,7300,7400,7400,1},{7400,7400,7500,7500,1},{7500,7500,7600,7600,1},{7600,7600,7700,7700,1},{7700,7700,7800,7800,1},{7800,7800,7900,7900,1},{7900,7900,8000,8000,1},{8000,8000,8100,8100,1},{8100,8100,8200,8200,1},{8200,8200,8300,8300,1},{8300,8300,8400,8400,1},{8400,8400,8500,8500,1},{8500,8500,8600,8600,1},{8600,8600,8700,8700,1},{8700,8700,8800,8800,1},{8800,8800,8900,8900,1},{8900,8900,9000,9000,1},{9000,9000,9100,9100,1},{9100,9100,9200,9200,1},{9200,9200,9300,9300,1},{9300,9300,9400,9400,1},{9400,9400,9500,9500,1},{9500,9500,9600,9600,1},{9600,9600,9700,9700,1},{9700,9700,9800,9800,1},{9800,9800,9900,9900,1},{9900,9900,10000,10000,1},{10000,10000,10100,10100,1}};
    // cout<<minimumCost(start, target, specialRoads)<<endl;
    cout<<findKOr(target,4);
}